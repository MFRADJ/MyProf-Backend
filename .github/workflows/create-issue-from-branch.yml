name: Create Issue from Branch

on:
  create:
    branches:
      - '*'  # Déclenche sur toute création de branche

jobs:
  create-issue:
    runs-on: ubuntu-latest
    if: github.event.ref_type == 'branch'  # Vérifie que c'est bien une branche
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Create Issue from Branch
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branchName = context.payload.ref;
            
            // Extraction des informations de la branche
            // Format attendu: type/MYPROF-123-description-courte
            const branchPattern = /^(feature|bugfix|hotfix|release)\/MYPROF-(\d+)-(.+)$/;
            const match = branchName.match(branchPattern);
            
            if (!match) {
              console.log('Format de branche non valide');
              return;
            }
            
            const [, type, issueNumber, description] = match;
            
            // Conversion du format kebab-case en texte lisible
            const readableDescription = description
              .split('-')
              .map(word => word.charAt(0).toUpperCase() + word.slice(1))
              .join(' ');
            
            // Création du corps de l'issue
            const body = `
            ## Description
            Issue créée automatiquement depuis la branche: ${branchName}
            
            ### Type
            ${type.charAt(0).toUpperCase() + type.slice(1)}
            
            ### Tâches
            - [ ] Implémenter les changements
            - [ ] Ajouter les tests
            - [ ] Mettre à jour la documentation
            - [ ] Code review
            
            ### Checklist de Qualité
            - [ ] Tests unitaires passent
            - [ ] Tests d'intégration passent
            - [ ] Code documenté
            - [ ] Pas de problèmes de sécurité
            - [ ] Performance acceptable
            
            ### Notes
            - Créé depuis la branche: ${branchName}
            - ID Jira: MYPROF-${issueNumber}
            
            ### Definition of Done
            - Code review approuvée
            - Tests passent
            - Documentation à jour
            - Déployable en production
            `;
            
            // Labels basés sur le type de branche
            const labels = [type];
            if (type === 'bugfix' || type === 'hotfix') {
              labels.push('bug');
            }
            
            try {
              const issue = await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `[${type.toUpperCase()}] ${readableDescription}`,
                body: body,
                labels: labels,
                assignee: context.actor  // Assigne à la personne qui a créé la branche
              });
              
              // Ajoute un commentaire dans l'issue avec le lien vers la branche
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.data.number,
                body: `Branch: ${branchName}\nLien: ${context.payload.repository.html_url}/tree/${branchName}`
              });
              
              console.log(`Issue créée: ${issue.data.html_url}`);
            } catch (error) {
              console.error('Erreur lors de la création de l\'issue:', error);
              throw error;
            }
