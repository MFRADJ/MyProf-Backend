name: Create Issue from Branch

on:
  create:
    branches:
      - '*'

jobs:
  create-issue:
    runs-on: ubuntu-latest
    if: github.event.ref_type == 'branch'
    
    steps:
      - name: Create Issue
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branchName = context.payload.ref;
            const branchPattern = /^(feature|bugfix|hotfix|release)\/MYPROF-(\d+)-(.+)$/;
            const match = branchName.match(branchPattern);
            
            if (!match) {
              console.log(`‚ùå Format de branche invalide: ${branchName}`);
              console.log('Format attendu: type/MYPROF-XXX-description');
              console.log('Types valides: feature, bugfix, hotfix, release');
              return;
            }
            
            const [, type, issueNumber, description] = match;
            
            // Conversion en titre lisible
            const title = description
              .split('-')
              .map(word => word.charAt(0).toUpperCase() + word.slice(1))
              .join(' ');
            
            // Template d'issue selon le type
            const templates = {
              feature: `
                ## üöÄ Nouvelle Fonctionnalit√©
                
                ### Description
                Impl√©mentation de : ${title}
                
                ### Objectifs
                - [ ] Analyse des besoins
                - [ ] Design technique
                - [ ] Impl√©mentation
                - [ ] Tests unitaires
                - [ ] Tests d'int√©gration
                - [ ] Documentation
                
                ### Crit√®res d'Acceptation
                - [ ] La fonctionnalit√© r√©pond aux besoins sp√©cifi√©s
                - [ ] Les tests passent √† 100%
                - [ ] La documentation est √† jour
                - [ ] Le code est revu et approuv√©
                
                ### Informations Techniques
                - **Branch:** ${branchName}
                - **Jira:** [MYPROF-${issueNumber}](https://myprof.atlassian.net/browse/MYPROF-${issueNumber})
                - **Type:** Feature
              `,
              
              bugfix: `
                ## üêõ Correction de Bug
                
                ### Description
                Correction de : ${title}
                
                ### Actions
                - [ ] Reproduction du bug
                - [ ] Analyse de la cause
                - [ ] Impl√©mentation du fix
                - [ ] Tests de r√©gression
                - [ ] Validation en staging
                
                ### Validation
                - [ ] Le bug est corrig√©
                - [ ] Pas d'effets secondaires
                - [ ] Tests ajout√©s pour √©viter la r√©gression
                
                ### Informations Techniques
                - **Branch:** ${branchName}
                - **Jira:** [MYPROF-${issueNumber}](https://myprof.atlassian.net/browse/MYPROF-${issueNumber})
                - **Type:** Bugfix
              `,
              
              hotfix: `
                ## üö® Hotfix Production
                
                ### Description
                Correction urgente : ${title}
                
                ### Actions Imm√©diates
                - [ ] Analyse d'impact
                - [ ] Correction
                - [ ] Tests critiques
                - [ ] D√©ploiement en production
                
                ### Post-Mortem
                - [ ] Analyse de la cause racine
                - [ ] Documentation de l'incident
                - [ ] Mesures pr√©ventives
                
                ### Informations Techniques
                - **Branch:** ${branchName}
                - **Jira:** [MYPROF-${issueNumber}](https://myprof.atlassian.net/browse/MYPROF-${issueNumber})
                - **Type:** Hotfix üö®
              `,
              
              release: `
                ## üì¶ Release
                
                ### Version
                ${title}
                
                ### Checklist
                - [ ] Merge des features
                - [ ] Tests de r√©gression
                - [ ] Migration base de donn√©es
                - [ ] Documentation mise √† jour
                - [ ] Release notes
                
                ### Validation
                - [ ] Tests staging OK
                - [ ] Performance valid√©e
                - [ ] S√©curit√© v√©rifi√©e
                
                ### Informations Techniques
                - **Branch:** ${branchName}
                - **Jira:** [MYPROF-${issueNumber}](https://myprof.atlassian.net/browse/MYPROF-${issueNumber})
                - **Type:** Release
              `
            };
            
            // Labels selon le type
            const labels = {
              feature: ['enhancement', 'üë®‚Äçüíª feature'],
              bugfix: ['bug', 'üêõ fix'],
              hotfix: ['bug', 'urgent', 'üö® hotfix'],
              release: ['release', 'üì¶ deploy']
            };
            
            try {
              // Cr√©ation de l'issue
              const issue = await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `[${type.toUpperCase()}] ${title}`,
                body: templates[type],
                labels: labels[type],
                assignee: context.actor
              });
              
              console.log(`‚úÖ Issue cr√©√©e: ${issue.data.html_url}`);
              
              // Commentaire avec lien vers la branche
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.data.number,
                body: `Branch cr√©√©e: [${branchName}](${context.payload.repository.html_url}/tree/${branchName})`
              });
              
            } catch (error) {
              console.error('‚ùå Erreur:', error);
              throw error;
            }
