name: Develop Branch Ruleset Checks

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop

jobs:
  verify-signed-commits:
    name: Verify Signed Commits
    runs-on: ubuntu-latest
    steps:
      - name: Verify Commit Signatures
        uses: actions/verify-commit-signature@v1
        with:
          verify-all: true

  code-review-checks:
    name: Code Review Requirements
    runs-on: ubuntu-latest
    steps:
      - name: Check Pull Request Reviews
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            
            const approvals = reviews.filter(review => review.state === 'APPROVED').length;
            if (approvals < 2) {
              core.setFailed('Pull request requires at least 2 approving reviews');
            }

  quality-checks:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Check Code Style
        run: mvn checkstyle:check

      - name: Run SonarQube Analysis
        run: mvn sonar:sonar
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  tests:
    name: Run All Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
          
      - name: Run Tests
        run: mvn verify
        
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            target/surefire-reports
            target/failsafe-reports

  security-scan:
    name: Security Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'MyProf-Backend'
          path: '.'
          format: 'HTML'
          
      - name: Upload Security Results
        uses: actions/upload-artifact@v3
        with:
          name: dependency-check-report
          path: reports

  conversation-resolution:
    name: Check Conversation Resolution
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Check Resolved Conversations
        uses: actions/github-script@v6
        with:
          script: |
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            
            const unresolvedComments = reviews.filter(review => 
              review.state === 'COMMENTED' && !review.resolved
            ).length;
            
            if (unresolvedComments > 0) {
              core.setFailed('All conversations must be resolved before merging');
            }

  status-check:
    name: Final Status Check
    needs: [verify-signed-commits, code-review-checks, quality-checks, tests, security-scan, conversation-resolution]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check All Status
        run: |
          if [ "${{ needs.verify-signed-commits.result }}" != "success" ] || \
             [ "${{ needs.code-review-checks.result }}" != "success" ] || \
             [ "${{ needs.quality-checks.result }}" != "success" ] || \
             [ "${{ needs.tests.result }}" != "success" ] || \
             [ "${{ needs.security-scan.result }}" != "success" ] || \
             [ "${{ needs.conversation-resolution.result }}" != "success" ]; then
            echo "One or more checks failed"
            exit 1
          fi
