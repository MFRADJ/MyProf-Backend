name: Create Issue on Branch Push

on:
  push:
    branches-ignore:
      - main
      - develop

jobs:
  create-issue:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Check if branch is new
        id: check_branch
        run: |
          # Vérifie si c'est le premier commit de la branche
          COMMIT_COUNT=$(git rev-list --count HEAD)
          if [ "$COMMIT_COUNT" -eq 1 ]; then
            echo "::set-output name=is_new::true"
          else
            echo "::set-output name=is_new::false"
          fi
      
      - name: Create Issue from Branch
        if: steps.check_branch.outputs.is_new == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branchName = context.ref.replace('refs/heads/', '');
            
            // Format attendu: type/MYPROF-123-description
            const branchPattern = /^(feature|bugfix|hotfix|release)\/MYPROF-(\d+)-(.+)$/;
            const match = branchName.match(branchPattern);
            
            if (!match) {
              console.log('Format de branche non valide');
              return;
            }
            
            const [, type, issueNumber, description] = match;
            
            const readableDescription = description
              .split('-')
              .map(word => word.charAt(0).toUpperCase() + word.slice(1))
              .join(' ');
            
            const body = `
            ## Description
            Issue créée automatiquement depuis la branche: ${branchName}
            
            ### Type
            ${type.charAt(0).toUpperCase() + type.slice(1)}
            
            ### Tâches
            - [ ] Implémenter les changements
            - [ ] Ajouter les tests
            - [ ] Mettre à jour la documentation
            - [ ] Code review
            
            ### ID Jira
            MYPROF-${issueNumber}
            `;
            
            try {
              const issue = await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `[${type.toUpperCase()}] ${readableDescription}`,
                body: body,
                labels: [type],
                assignee: context.actor
              });
              
              console.log(`Issue créée: ${issue.data.html_url}`);
            } catch (error) {
              console.error('Erreur lors de la création de l\'issue:', error);
              throw error;
            }
