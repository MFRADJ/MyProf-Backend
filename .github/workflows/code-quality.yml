name: Code Quality

on:
  pull_request:
    branches: [ develop ]
  push:
    branches: [ develop ]

jobs:
  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Checkstyle
        run: mvn checkstyle:check
        continue-on-error: false

      - name: PMD Analysis
        run: mvn pmd:check
        continue-on-error: false

      - name: SpotBugs Analysis
        run: mvn spotbugs:check
        continue-on-error: false

      - name: SonarCloud Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: >
          mvn -B verify sonar:sonar
          -Dsonar.projectKey=myprof-backend
          -Dsonar.organization=myprof
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.java.coveragePlugin=jacoco
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
          -Dsonar.coverage.exclusions=**/model/**,**/config/**,**/MyProfApplication.java

      - name: Quality Gate Check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Generate Code Coverage Report
        run: mvn jacoco:report

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: target/site/jacoco/
